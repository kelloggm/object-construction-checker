plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'

    // For bringing in AWS dependencies. We're using the "legacy" version
    // listed here: https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-project-gradle.html,
    // because the build fails when we use the Gradle 5+ way, saying that it can't find ec2.
    // I believe that this is because we need the AWS SDK during testing, but not during the build.
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'

    id "com.diffplug.gradle.spotless" version "3.23.0"
}

sourceCompatibility = 1.8

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'org.checkerframework:checker:2.9.0'
    // If / when other code depends on this checker, we will likely want to make this
    // an api dependence
    implementation project(':object-construction-qual')

    // For the @CalledMethodsPredicate evaluation
    implementation 'org.springframework:spring-expression:5.1.7.RELEASE'
    
    // If / when other code depends on this checker, we will likely want to make this
    // an api dependence
    implementation project(':returnsrcvr-checker')

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // CF testing infrastructure
    testCompile 'org.checkerframework:testlib:2.5.4'

    // For CVE tests
    testCompile 'com.amazonaws:aws-java-sdk-ec2'

    // For AutoValue Builders
    implementation 'com.google.auto.value:auto-value-annotations:1.6.5'
    testCompile 'com.google.auto.value:auto-value-annotations:1.6.5'
    testCompile 'com.google.auto.value:auto-value:1.6.5'
    testCompile 'com.google.guava:guava:28.0-jre'

    // For Lombok Builders
    testCompile 'org.projectlombok:lombok:1.18.8'
    testCompile project(':test-lib-java')
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

// run google java format
spotless {
    // uncomment this line to temporarily disable spotless (i.e. when debugging)
    // enforceCheck = false
    java {
        googleJavaFormat()
    }
}

clean.doFirst {
    delete "${rootDir}/object-construction-checker/tests/build/"
}

apply from: rootProject.file("gradle-mvn-push.gradle")
